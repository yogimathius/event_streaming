services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - marry_me_kafka

  kafka:
    image: &kafka-image bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./create-topics.sh:/opt/bitnami/kafka/bin/create-topics.sh
    depends_on:
      - kafka-manager
    networks:
      - marry_me_kafka
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server=localhost:9092",
          "--list",
        ]
      start_period: 5s
      interval: 5s

  init-kafka:
    image: *kafka-image
    working_dir: /opt/bitnami/kafka/bin
    entrypoint: /bin/bash
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./create-topics.sh:/opt/bitnami/kafka/bin/create-topics.sh
    command: -c "./create-topics.sh"
    networks:
      - marry_me_kafka

  kafka-manager:
    image: kafkamanager/kafka-manager:latest
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - marry_me_kafka

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.26.0
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksqldb/log4j.properties"
      KSQL_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9093,kafka-3:9094
      KSQL_LISTENERS: "http://0.0.0.0:8088"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/info"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - marry_me_kafka

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.26.0
    container_name: ksqldb-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - marry_me_kafka

networks:
  marry_me_kafka:
    driver: bridge
