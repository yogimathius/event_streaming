services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - marry_me_kafka

  kafka:
    image: &kafka-image confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - marry_me_kafka

  kafka-create-topics:
    image: confluentinc/cp-kafka:7.1.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: ["bash", "./create-topics.sh"]
    working_dir: /scripts
    volumes:
      - ./scripts:/scripts
    networks:
      - marry_me_kafka

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - marry_me_kafka

  postgres:
    image: postgres:latest
    restart: always
    user: postgres
    environment:
      - PG_DB=event_streaming
      - POSTGRES_DB=event_streaming
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass123
      - PGUSER=postgres
      - PG_PASSWORD=pass123
      - PGDATA=/var/lib/postgresql/data/some_name/
    ports:
      - 5432
    volumes:
      - "db_primary:/var/lib/postgresql/data:delegated"
      - "./sql/create_database.sql:/docker-entrypoint-initdb.d/setup.sql:cached"
      - "./sql/create_tables.sql:/docker-entrypoint-initdb.d/01_create_tables.sql:cached"
      - "./sql/fill_tables.sql:/docker-entrypoint-initdb.d/01_fill_tables.sql"
    networks:
      - marry_me_kafka
    command: postgres -c listen_addresses='*' -c 'max_connections=1100' -c shared_buffers=512MB -c effective_cache_size=2GB -c work_mem=64MB -c maintenance_work_mem=512MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c max_wal_size=2GB
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  marry_me_kafka:
    driver: bridge

volumes:
  db_primary:
